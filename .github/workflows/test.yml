on:
  pull_request:
    branches: [master]
  workflow_dispatch:

permissions:
  contents: write
  statuses: write
  actions: write

jobs:
  # Step 1: Prettier job
  prettier:
    runs-on: ubuntu-latest
    outputs:
      prettier_changes: ${{ steps.check_changes.outputs.prettier_changes }}  # Declare output here
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch full history to check for changes
          ref: ${{ github.head_ref }}

      - name: Run Prettier
        uses: creyD/prettier_action@v4.3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          prettier_options: --write '**/*.{js,jsx,ts,tsx}'

      - name: Check if Prettier will make changes
        id: check_changes
        run: |
          git diff --exit-code || echo "prettier_changes=true" >> $GITHUB_ENV
          echo "::set-output name=prettier_changes::${{ env.prettier_changes }}"

      - name: Commit and push changes
        if: ${{ steps.check_changes.outputs.prettier_changes == 'true' }}
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add .
          git commit -m "Apply Prettier formatting"
          git push origin ${{ github.head_ref }}  # Push changes back to the PR branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Step 2: Wait for the new commit after Prettier (if any)
  wait_for_commit:
    needs: prettier
    runs-on: ubuntu-latest
    if: ${{ needs.prettier.outputs.prettier_changes == 'true' }}  # Only run if Prettier made changes
    steps:
      - name: Wait for commit processing
        run: |
          echo "Waiting for new commit to be processed by GitHub"
          sleep 15  # Adjust if necessary to wait for the commit to be processed

  # Step 3: Tests job
  tests:
    needs: [prettier, wait_for_commit]
    runs-on: ubuntu-latest
    if: ${{ needs.prettier.outputs.prettier_changes != 'true' }}  # Skip tests if Prettier made changes
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: Install Dependencies
        run: npm ci

      - name: Build Application
        run: npm run build --if-present

      - name: Run Tests
        run: npm run test-ci
z